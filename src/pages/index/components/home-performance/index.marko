<home-feature-block.home-performance>
  <@title text="Tailored Performance" anchorName="performance"/>
  <@content>
      <p>Marko's compiler generates code tailored to where it is going to run. You write your code once and it is optimized for both the server and browser. This is especially apparent on the server where Marko is several times faster than other popular solutions.</p>
  </@content>
  <@visual>
      <div.home-performance-example role="img" aria-label="Marko templates are compiled to generate HTML Strings on the server and VDOM Nodes in the browser">
          <div.home-performance-input>
            <code-block lang="marko" no-switch code=`
                <div>
                  <h2>Images</h2>
                  <div>
                    <for|item| of=input.items>
                      <div on-click(() => alert(item.title), item)>
                        <img src=item.img alt="" />
                      </div>
                    </for>
                  </div>
                </div>
            `/>
          </div>
          <div.home-performance-arrow>
            <img src="./arrow.svg" alt=""/>
          </div>
          <div.home-performance-outputs>
            <div.home-performance-html>
              <code-block lang="javascript" no-switch code=`
                  out.write("<div><h2>Images</h2><div>");
                  for (const item of input.items) {
                    out.write(\`<div><img\${_marko_attr("src", item.img)}></div>\`);
                  }
                  out.write("</div></div>");
              `/>
              <div.home-performance-output-overlay>
                HTML Strings <small>on the server</small>
              </div>
            </div>
            <div.home-performance-vdom>
              <code-block lang="javascript" no-switch code=`
                  out.beginElement("div", null, "0", component);
                  out.beginElement("h2", null, "1", component);
                  out.text("Images", component);
                  out.endElement();
                  out.beginElement("div", null, "2", component);
                  {
                    let _keyValue = 0;
                    for (const item of input.items) {
                      const _keyScope = \`[\${_keyValue++}]\`;
                      out.beginElement("div", null, "3" + _keyScope, component, null, 0, {
                        onclick: _component.d("click", "onBannerClick", false, [item]),
                      });
                      out.element("img", { src: item.img }, "4" + _keyScope, component, 0);
                      out.endElement();
                    }
                  }
                  out.endElement();
                  out.endElement();
              `/>
              <div.home-performance-output-overlay>
                VDOM Nodes <small>in the browser</small>
              </div>
            </div>
          </div>
      </div>
  </@visual>
  <@action href="https://github.com/marko-js/isomorphic-ui-benchmarks" text="See the Benchmarks"/>
</home-feature-block>

style {
    .home-performance {
        background-color: #f31650;
        background-image: linear-gradient(135deg, #f1195b, #f31650, #ef7403);
    }
    .home-performance-example {
        display: flex;
        flex-direction:row;
        flex:1;
    }
    .home-performance-input {
      flex:1;
      display: flex;
      align-items: center;
    }
    .home-performance-input pre {
      box-shadow: 0 0.75em 0.75em rgba(0,0,0,0.3);
    }
    .home-performance-arrow {
      display:flex;
      align-items: center;
    }
    .home-performance-arrow img {
      width:4em;
      transform: rotate(180deg);
      opacity:0.3;
    }
    .home-performance-outputs {
      position:relative;
      flex:1;
      overflow:hidden;
      border-radius:0.2em;
      box-shadow: 0 0.75em 0.75em rgba(0,0,0,0.3);
    }
    .home-performance-outputs pre {
      font-size: 0.6em;
    }
    .home-performance-html {
      position:absolute;
      top:0; left:0; right:0; bottom:50%;
      overflow:hidden;
      background:#fff;
    }
    .home-performance-vdom {
      position:absolute;
      top:50%; left:0; right:0; bottom:0;
      overflow:hidden;
      background:#202034;
    }
    .home-performance-output-overlay {
      position:absolute;
      top:0; right:0; bottom:0; left:0;
      display:flex;
      flex-direction:column;
      justify-content:center;
      align-items:center;
      font-size:2em;
    }
    .home-performance-vdom
    .home-performance-output-overlay {
      color:#fff;
    }
    .home-performance-output-overlay small {
      font-size:0.5em;
      opacity:0.8;
    }
    .home-performance-html pre {
      filter: invert(1);
      background: transparent !important;
      opacity: 0.3;
    }
    .home-performance-vdom pre {
      background: transparent !important;
      opacity: 0.3;
    }
    @media (max-width:55em) {
      .home-performance-example {
        flex-direction:column;
        align-items:center;
        font-size: min(3vw, 100%);
      }
      .home-performance-arrow img {
        transform: rotate(-90deg);
      }
      .home-performance-outputs {
        width:100%;
        height:10em;
        flex:none;
      }
      .home-performance-html {
        position:absolute;
        top:0; left:0; right:50%; bottom:0;
        overflow:hidden;
        background:#fff;
      }
      .home-performance-vdom {
        position:absolute;
        top:0; left:50%; right:0; bottom:0;
        overflow:hidden;
        background:#202034;
      }
    }
}

